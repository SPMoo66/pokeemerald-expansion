script Mart_EventScript_Clerk{
	lock
	faceplayer
	msgbox(gText_HowMayIServeYou)
	waitmessage
	special(GetNumberOfBadges)
	switch (var(VAR_RESULT)) {
		case 0:
			pokemart(BadgedPokemart0)
		case 1:
			pokemart(BadgedPokemart1)
		case 2:
			pokemart(BadgedPokemart2)
		case 3:
			pokemart(BadgedPokemart3)
		case 4:
		case 5:
			pokemart(BadgedPokemart4)
		case 6:
			pokemart(BadgedPokemart6)
		case 7:
		case 8:
			pokemart(BadgedPokemart7)
		default:
			break
		}
	msgbox(gText_PleaseComeAgain)
	release
	end
}

mart BadgedPokemart0 {
	ITEM_POKE_BALL
	ITEM_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
}

mart BadgedPokemart1 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
}

mart BadgedPokemart2 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
}

mart BadgedPokemart3 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_MAX_REPEL
}

mart BadgedPokemart4 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_MAX_REPEL
}

mart BadgedPokemart6 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_MAX_POTION
	ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_MAX_REPEL
}

mart BadgedPokemart7 {
	ITEM_POKE_BALL
	ITEM_GREAT_BALL
	ITEM_ULTRA_BALL
	ITEM_POTION
	ITEM_SUPER_POTION
	ITEM_HYPER_POTION
	ITEM_MAX_POTION
	ITEM_FULL_RESTORE
	ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_AWAKENING
	ITEM_BURN_HEAL
	ITEM_ICE_HEAL
	ITEM_FULL_HEAL
	ITEM_REPEL
	ITEM_SUPER_REPEL
	ITEM_MAX_REPEL
}

script Mart_EventScript_TMClerk{
	lock
	faceplayer
	if(!flag(FLAG_BADGE01_GET))
	{
		msgbox(format("Sorry, I can only sell to trainers who have earned at least one Gym Badge."))
	}
	else
	{
	msgbox(gText_HowMayIServeYou)
	waitmessage
		dynmultipush("Badge 1 TMs", 0)
		if (flag(FLAG_BADGE02_GET)) {
			dynmultipush("Badge 2 TMs", 1)
		}
		if (flag(FLAG_BADGE03_GET)) {
			dynmultipush("Badge 3 TMs", 2)
		}
		if (flag(FLAG_BADGE04_GET)) {
			dynmultipush("Badge 4 TMs", 3)
		}
		if (flag(FLAG_BADGE05_GET)) {
			dynmultipush("Badge 5 TMs", 4)
		}
		if (flag(FLAG_BADGE06_GET)) {
			dynmultipush("Badge 6 TMs", 5)
		}
		if (flag(FLAG_BADGE07_GET)) {
			dynmultipush("Badge 7 TMs", 6)
		}
		if (flag(FLAG_BADGE08_GET)) {
			dynmultipush("Badge 8 TMs", 7)
		}
		dynmultistack(0, 0, FALSE, 6, FALSE, VAR_0x800A, DYN_MULTICHOICE_CB_NONE)
		switch (var(VAR_RESULT)) {
			case 0:
				pokemart(TMMart1)
			case 1:
				pokemart(TMMart2)
			case 2:
				pokemart(TMMart3)
			case 3:
				pokemart(TMMart4)
			case 4:
				pokemart(TMMart5)
			case 5:
				pokemart(TMMart6)
			case 6:
				pokemart(TMMart7)
			case 7:
				pokemart(TMMart8)
			default:
				break
			}
		msgbox(gText_PleaseComeAgain)
	}
	release
	end
}

mart TMMart1 {
	ITEM_TM33
	ITEM_TM47
	ITEM_TM93
}

mart TMMart2 {
	ITEM_TM21
	ITEM_TM26
	ITEM_TM29
	ITEM_TM31
	ITEM_TM37
	ITEM_TM81
	ITEM_TM109
	ITEM_TM110
	ITEM_TM119
}

mart TMMart3 {
	ITEM_TM01
	ITEM_TM02
	ITEM_TM03
	ITEM_TM04
	ITEM_TM19
	ITEM_TM20
	ITEM_TM30
	ITEM_TM39
	ITEM_TM44
	ITEM_TM48
	ITEM_TM64
	ITEM_TM68
	ITEM_TM76
	ITEM_TM94
	ITEM_TM103
	ITEM_TM115
}

mart TMMart4 {
	ITEM_TM10
	ITEM_TM15
	ITEM_TM16
	ITEM_TM16
	ITEM_TM17
	ITEM_TM18
	ITEM_TM25
	ITEM_TM32
	ITEM_TM65
	ITEM_TM73
	ITEM_TM75
	ITEM_TM82
	ITEM_TM87
	ITEM_TM101
	ITEM_TM104
	ITEM_TM108
	ITEM_TM114
	ITEM_TM116
}

mart TMMart5 {
	ITEM_TM05
	ITEM_TM06
	ITEM_TM07
	ITEM_TM08
	ITEM_TM11
	ITEM_TM12
	ITEM_TM13
	ITEM_TM24
	ITEM_TM28
	ITEM_TM45
	ITEM_TM50
	ITEM_TM54
	ITEM_TM60
	ITEM_TM61
	ITEM_TM66
	ITEM_TM71
	ITEM_TM78
	ITEM_TM83
	ITEM_TM85
	ITEM_TM86
	ITEM_TM88
	ITEM_TM99
	ITEM_TM111
	ITEM_TM112
}

mart TMMart6 {
	ITEM_TM09
	ITEM_TM22
	ITEM_TM23
	ITEM_TM41
	ITEM_TM49
	ITEM_TM51
	ITEM_TM52
	ITEM_TM56
	ITEM_TM57
	ITEM_TM59
	ITEM_TM62
	ITEM_TM67
	ITEM_TM69
	ITEM_TM74
	ITEM_TM79
	ITEM_TM89
	ITEM_TM90
	ITEM_TM91
	ITEM_TM92
	ITEM_TM97
	ITEM_TM98
	ITEM_TM100
	ITEM_TM102
	ITEM_TM105
	ITEM_TM106
	ITEM_TM113
	ITEM_TM117
	ITEM_TM118
	ITEM_TM120
}

mart TMMart7 {
	ITEM_TM36
	ITEM_TM38
	ITEM_TM42
	ITEM_TM53
	ITEM_TM58
	ITEM_TM63
	ITEM_TM70
	ITEM_TM72
	ITEM_TM77
	ITEM_TM84
	ITEM_TM95
}

mart TMMart8 {
	ITEM_TM43
	ITEM_TM107
}

// Plays Encounter BGM for Emeralbody Rival
script Common_EventScript_PlayEmRivalBgm {
	switch (var(VAR_EMERALBODY_RIVAL)) {
		case 1:
			playbgm (MUS_DP_DAWN, FALSE)
		case 2:
			playbgm (MUS_HG_EUSINE, FALSE)
		case 3:
			playbgm (MUS_HG_ETHAN, FALSE)
		case 4:
			playbgm (MUS_HG_ENCOUNTER_GIRL_1, FALSE)
		default:
			playbgm (MUS_PL_B_HALL, FALSE)
	}
}

raw `
Common_EventScript_GymNurse::
	lock
	faceplayer
	msgbox gText_GymNurseHeal, MSGBOX_DEFAULT
	closemessage
	call Common_EventScript_OutOfCenterPartyHeal
	releaseall
	end

gText_GymNurseHeal::
	.string "Allow me to heal your Pokémon.$"
`

script Mart_EventScript_EvoClerk {
	lock
	faceplayer
	special(GetNumberOfBadges)
	copyvar (VAR_TEMP_0, VAR_RESULT)
	if (var(VAR_TEMP_0) < 3) {
		msgbox(format("Sorry, I can only sell to trainers who have earned at least three Gym Badges."))
	}
	else {
		msgbox(gText_HowMayIServeYou)
		waitmessage
		dynmultipush("Stones", 0)
		dynmultipush("Other", 0)
		if (var(VAR_RESULT) < 5) {
			dynmultipush("Extra", 0)
		}
		dynmultistack(0, 0, FALSE, 4, FALSE, 0, DYN_MULTICHOICE_CB_NONE)
		if (var(VAR_RESULT) == 0) {
			switch (var(VAR_TEMP_0)) {
				case 0:
				case 1:
				case 2:
				case 3:
				case 4:
					pokemart(EvoStonesPokemart3)
				case 5:
				case 6:
				case 7:
				case 8:
					pokemart(EvoStonesPokemart5)
				default:
					break
			}
		}
		elif (var(VAR_RESULT) == 1) {
			switch (var(VAR_TEMP_0)) {
				case 0:
				case 1:
				case 2:
				case 3:
					pokemart(EvoOtherPokemart3)
				case 4:
					pokemart(EvoOtherPokemart4)
				case 5:
				case 6:
				case 7:
				case 8:
					pokemart(EvoOtherPokemart5)
				default:
					break
			}
		}
		elif (var(VAR_RESULT) == 2) {
			switch (var(VAR_TEMP_0)) {
				case 0:
				case 1:
				case 2:
				case 3:
				case 4:
				case 5:
				case 6:
					pokemart(EvoExtraPokemart6)
				case 7:
				case 8:
					pokemart(EvoExtraPokemart6)
				default:
					break
			}
		}
		msgbox(gText_PleaseComeAgain)
	}
	release
	end
}

mart EvoStonesPokemart3 {
	ITEM_FIRE_STONE
	ITEM_WATER_STONE
	ITEM_THUNDER_STONE
	ITEM_LEAF_STONE
	ITEM_ICE_STONE
	ITEM_MOON_STONE
	ITEM_SUN_STONE
}

mart EvoStonesPokemart5 {
	ITEM_FIRE_STONE
	ITEM_WATER_STONE
	ITEM_THUNDER_STONE
	ITEM_LEAF_STONE
	ITEM_ICE_STONE
	ITEM_MOON_STONE
	ITEM_SUN_STONE
	ITEM_SHINY_STONE
	ITEM_DUSK_STONE
	ITEM_DAWN_STONE
}

mart EvoOtherPokemart3 {
	ITEM_SACHET
	ITEM_WHIPPED_DREAM
}

mart EvoOtherPokemart4 {
	ITEM_LINKING_CORD
	ITEM_KINGS_ROCK
	ITEM_SACHET
	ITEM_WHIPPED_DREAM
	ITEM_CHIPPED_POT
	ITEM_TART_APPLE
	ITEM_SWEET_APPLE
	ITEM_SYRUPY_APPLE
}

mart EvoOtherPokemart5 {
	ITEM_LINKING_CORD
	ITEM_KINGS_ROCK
	ITEM_METAL_COAT
	ITEM_BLACK_AUGURITE
	ITEM_DRAGON_SCALE
	ITEM_UPGRADE
	ITEM_DEEP_SEA_TOOTH
	ITEM_DEEP_SEA_SCALE
	ITEM_PRISM_SCALE
	ITEM_SACHET
	ITEM_WHIPPED_DREAM
	ITEM_CHIPPED_POT
	ITEM_TART_APPLE
	ITEM_SWEET_APPLE
	ITEM_SYRUPY_APPLE
	ITEM_GALARICA_CUFF
	ITEM_GALARICA_WREATH
	ITEM_AUSPICIOUS_ARMOR
	ITEM_MALICIOUS_ARMOR
}

mart EvoExtraPokemart6 {
	ITEM_DUBIOUS_DISC
	ITEM_ELECTIRIZER
	ITEM_MAGMARIZER
	ITEM_PROTECTOR
	ITEM_RAZOR_CLAW
	ITEM_RAZOR_FANG
	ITEM_REAPER_CLOTH
}

mart EvoExtraPokemart7 {
	ITEM_DUBIOUS_DISC
	ITEM_ELECTIRIZER
	ITEM_MAGMARIZER
	ITEM_PROTECTOR
	ITEM_RAZOR_CLAW
	ITEM_RAZOR_FANG
	ITEM_REAPER_CLOTH
	ITEM_SCROLL_OF_DARKNESS
	ITEM_SCROLL_OF_WATERS
}

script Common_EventScript_MoveReminder {
	lock
	faceplayer
	if (flag(FLAG_TEMP_1) == false) {
		msgbox(format("I'm the Move Reminder.\pI know all the moves that Pokémon learn--every one of them--and I can teach Pokémon those moves.\pI can teach a move to a Pokémon of yours if you'd like."))
	}
	setflag (FLAG_TEMP_1)
	msgbox(format("Would you like me to teach a move?"))
	setvar (VAR_RESULT, 2)
	dynmultipush("Move Relearner", 0)
	if (flag(FLAG_BADGE02_GET)) {
		dynmultipush("Egg Moves", 1)
	}
	dynmultipush("Cancel", 2)
	dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_NONE)
	if (var(VAR_RESULT) >= 2) {
		msgbox(format("Come back if your Pokémon need to learn another move."))
	}
	else {
		if (var(VAR_RESULT) == 1) {
			setflag (FLAG_EGG_MOVE_TUTOR)
		}
		while {
			msgbox(format("Which Pokémon needs tutoring?"))
			special (ChooseMonForMoveRelearner)
			waitstate
			if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {
				msgbox(format("Come back if your Pokémon need to learn another move."))
				break
			}
			else {
				special (IsSelectedMonEgg)
				if (var(VAR_RESULT) == TRUE) {
					msgbox(format("Hunh? There isn't a single move that I can teach an Egg."))
				}
				elif (var(VAR_0x8005) == 0) {
					msgbox(format("Sorry, it doesn't appear as if I have any move I can teach that Pokémon."))
				}
				else {
					msgbox(format("Which move should I teach?"))
					special (TeachMoveRelearnerMove)
					waitstate
					msgbox(format("Come back if your Pokémon need to learn another move."))
					break
				}
			}
		}
	}
	clearflag (FLAG_EGG_MOVE_TUTOR)
	release
}

script EventScript_CapCollector {
	lock
	faceplayer
	if (!flag(FLAG_TEMP_1)) {
		msgbox(BottleCapCollectorIntro)
		setflag (FLAG_TEMP_1)
	}
	msgbox(DoYouHaveAnyCaps)
	waitmessage
	dynmultipush("Metronome", ITEM_METRONOME)
	dynmultipush("Grip Claw", ITEM_GRIP_CLAW)
	dynmultipush("Sticky Barb", ITEM_STICKY_BARB)
	dynmultipush("Shed Shell", ITEM_SHED_SHELL)
	dynmultipush("Big Root", ITEM_BIG_ROOT)
	dynmultipush("Light Clay", ITEM_LIGHT_CLAY)
	dynmultipush("Air Balloon", ITEM_AIR_BALLOON)
	dynmultipush("White Herb", ITEM_WHITE_HERB)
	dynmultipush("Red Card", ITEM_RED_CARD)
	dynmultipush("Eject Button", ITEM_EJECT_BUTTON)
	dynmultipush("Safety Goggles", ITEM_SAFETY_GOGGLES)
	dynmultipush("Throat Spray", ITEM_THROAT_SPRAY)
	dynmultipush("Mental Herb", ITEM_MENTAL_HERB)
	dynmultipush("Normal Gem", ITEM_NORMAL_GEM)
	special(GetNumberOfBadges)
	if (var(VAR_RESULT) >= 5) {
		dynmultipush("Booster Energy", ITEM_BOOSTER_ENERGY)
		dynmultipush("Mirror Herb", ITEM_MIRROR_HERB)
		dynmultipush("Power Herb", ITEM_POWER_HERB)
	}
	special (ShowBottleCapsWindow)
	dynmultistack(17, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_ITEM)
	if (var(VAR_RESULT) != 127) {
		copyvar (VAR_0x8009, VAR_RESULT)
		checkitem (ITEM_BOTTLE_CAP)
		if (!var(VAR_RESULT)) {
			msgbox("You don't seem to have any Bottle Caps,\nthus I have nothing to give you.")
			special (CloseBattlePointsWindow)
			release
			end
		}
		checkitemspace (VAR_0x8009)
		if (var(VAR_RESULT) == FALSE) {
			msgbox(format("You don't have any room in your Bag for this item."))
			special (CloseBattlePointsWindow)
			release
			end
		}
		removeitem (ITEM_BOTTLE_CAP)
		additem (VAR_0x8009)
		special (UpdateBottleCapsWindow)
		playse (SE_SHOP)
	}
	msgbox(gText_PleaseComeAgain)
	special (CloseBattlePointsWindow)
	release
	end
}


text BottleCapCollectorIntro {
	format("I'm a collector of Bottle Caps.\nIf you happen to come across any, I'll gladly trade you some rare items in exchange for them.")
}

text DoYouHaveAnyCaps {
	format("Do you have any Bottle Caps you'd like to trade?")
}

script Mart_EventScript_AbilityNatureClerk {
	lock
	faceplayer
	msgbox(gText_HowMayIServeYou)
	waitmessage
	pokemart(AbilityNaturePokemart)
	msgbox(gText_PleaseComeAgain)
	release
	end
}

mart AbilityNaturePokemart {
	ITEM_ABILITY_CAPSULE
	ITEM_ABILITY_PATCH
	ITEM_SASSY_MINT
	ITEM_TIMID_MINT
	ITEM_HASTY_MINT
	ITEM_CALM_MINT
	ITEM_GENTLE_MINT
	ITEM_CAREFUL_MINT
	ITEM_MILD_MINT
	ITEM_RASH_MINT
	ITEM_QUIET_MINT
	ITEM_LAX_MINT
	ITEM_RELAXED_MINT
	ITEM_MODEST_MINT
	ITEM_BRAVE_MINT
	ITEM_BOLD_MINT
	ITEM_IMPISH_MINT
	ITEM_LONELY_MINT
	ITEM_ADAMANT_MINT
	ITEM_NAUGHTY_MINT
}