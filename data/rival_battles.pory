	# State descriptions for VAR_EMERALBODY_RIVAL_BATTLE_STATE
	#  1: Set after winning Battle02
	#  2: Set after winning Battle03
	#  3: Set after winning Battle04
	#  4: Set after winning Battle05

# Harper

const HARPER_BATTLE02 = 4

script Harper_Battle02 { // VAR_EMERALBODY_RIVAL_BATTLE_STATE == 0
	if (var(VAR_EMERALBODY_RIVAL) == 1) { // Check if Harper is your rival
		lock
		call (Common_EventScript_PlayEmRivalBgm)
		addobject (HARPER_BATTLE02)
		playse (SE_EXIT)
		waitse
		applymovement (HARPER_BATTLE02, Common_Movement_WalkUp4)
		waitmovement (0)
		applymovement (HARPER_BATTLE02, Common_Movement_WalkRight4)
		waitmovement (0)
		call (GetRivalForNameBox)
		msgbox (Battle02_HarperText_PreBattle, MSGBOX_DEFAULT)
		call (GetRivalMusic)
		trainerbattle_no_intro (TRAINER_HARPER_2, Battle02_HarperText_BattleVictory)
		call (GetRivalForNameBox)
		msgbox(Battle02_HarperText_PostBattle)
		closemessage
		applymovement (LOCALID_PLAYER, Harper_PlayerMoves)
		waitmovement (0)
		applymovement (HARPER_BATTLE02, Common_Movement_WalkRight9)
		waitmovement (0)
		removeobject (HARPER_BATTLE02)
		fadedefaultbgm
		setvar (VAR_EMERALBODY_RIVAL_BATTLE_STATE, 1)
		release
	}
}

movement Harper_PlayerMoves {
	face_up
	lock_facing_direction
	walk_down
	unlock_facing_direction
}


# Sakura

const SAKURA_BATTLE02 = 3

script Sakura_Battle02 { // VAR_EMERALBODY_RIVAL_BATTLE_STATE == 0
	if (var(VAR_EMERALBODY_RIVAL) == 4) { // Check if Sakura is your rival
		lock
		call (Common_EventScript_PlayEmRivalBgm)
		addobject (SAKURA_BATTLE02)
		applymovement (LOCALID_PLAYER, Common_Movement_WalkInPlaceDown)
		waitmovement (0)
		playse (SE_PIN)
		applymovement (LOCALID_PLAYER, Common_Movement_ExclamationMark)
		waitmovement (0)
		delay (60)
		applymovement (SAKURA_BATTLE02, Common_Movement_WalkUp4)
		waitmovement (0)
		playse (SE_LEDGE)
		applymovement (SAKURA_BATTLE02, Common_Movement_JumpUp)
		waitmovement (0)
		playse (SE_M_CUT)
		waitse
		call (GetRivalForNameBox)
		msgbox (Battle02_SakuraText_PreBattle, MSGBOX_DEFAULT)
		call (GetRivalMusic)
		trainerbattle_no_intro (TRAINER_SAKURA_2, Battle02_SakuraText_BattleVictory)
		call (GetRivalForNameBox)
		msgbox(Battle02_SakuraText_PostBattle)
		closemessage
		applymovement (SAKURA_BATTLE02, Common_Movement_WalkDown5)
		waitmovement (0)
		removeobject (SAKURA_BATTLE02)
		fadedefaultbgm
		setvar (VAR_EMERALBODY_RIVAL_BATTLE_STATE, 1)
		release
	}
}


# Redd

const REDD_BATTLE02 = 40

script Redd_Battle02 { // VAR_EMERALBODY_RIVAL_BATTLE_STATE == 0
	if (var(VAR_EMERALBODY_RIVAL) == 3) { // Check if Redd is your rival
		lock
		call (Common_EventScript_PlayEmRivalBgm)
		call (GetRivalForNameBox)
		getplayerxy (VAR_TEMP_0, VAR_TEMP_1)
		if (var(VAR_TEMP_1) == 58) { // Standard bottom entrance
			switch (var(VAR_TEMP_0)) {
				case 17: // Left side
					applymovement (REDD_BATTLE02, Common_Movement_WalkLeft)
					waitmovement (0)
				case 19: // Right side
					applymovement (REDD_BATTLE02, Common_Movement_WalkRight)
					waitmovement (0)
				default: // Center, no side movement
			}
			applymovement (REDD_BATTLE02, Common_Movement_WalkDown2)
			waitmovement (0)
			msgbox (Battle02_ReddText_PreBattle, MSGBOX_DEFAULT)
		}
		else { // Side entrance
			applymovement (REDD_BATTLE02, Common_Movement_FaceUp)
			waitmovement (0)
			playse (SE_PIN)
			applymovement (REDD_BATTLE02, Common_Movement_ExclamationMark)
			waitmovement (0)
			delay (60)
			if (var(VAR_TEMP_1) == 52) { // Upper tile
				applymovement (REDD_BATTLE02, Common_Movement_WalkUp3)
				waitmovement (0)
			}
			else { // Lower tile
				applymovement (REDD_BATTLE02, Common_Movement_WalkUp2)
				waitmovement (0)
			}
			applymovement (REDD_BATTLE02, Common_Movement_WalkRight)
			waitmovement (0)
			msgbox (Battle02_ReddText_PreBattleAlt, MSGBOX_DEFAULT)
		}
		call (GetRivalMusic)
		trainerbattle_no_intro (TRAINER_REDD_2, Battle02_ReddText_BattleVictory)
		call (GetRivalForNameBox)
		msgbox (Battle02_ReddText_PostBattle)
		closemessage
		applymovement (REDD_BATTLE02, Common_Movement_WalkUp6)
		waitmovement (0)
		removeobject (REDD_BATTLE02)
		fadedefaultbgm
		setvar (VAR_EMERALBODY_RIVAL_BATTLE_STATE, 1)
		setflag (FLAG_TEMP_2)
		release
	}
}


# Baron

const BARON_BATTLE02 = 7

script Baron_Battle02 { // VAR_EMERALBODY_RIVAL_BATTLE_STATE == 0
	if (var(VAR_EMERALBODY_RIVAL) == 0) { // Check if Baron is your rival
		lock
		call (Common_EventScript_PlayEmRivalBgm)
		call (GetRivalForNameBox)
		getplayerxy (VAR_TEMP_0, VAR_TEMP_1)
		if (var(VAR_TEMP_1) == 9) { // Trigger spot
			applymovement (BARON_BATTLE02, Common_Movement_WalkInPlaceUp)
			waitmovement (0)
			delay (50)
			applymovement (LOCALID_PLAYER, Common_Movement_WalkInPlaceDown)
			applymovement (BARON_BATTLE02, Common_Movement_WalkUp)
			waitmovement (0)
		}
		else {
			faceplayer
		}
		msgbox (Battle02_BaronText_PreBattle, MSGBOX_DEFAULT)
		call (GetRivalMusic)
		trainerbattle_no_intro (TRAINER_BARON_2, Battle02_BaronText_BattleVictory)
		call (GetRivalForNameBox)
		msgbox (Battle02_BaronText_PostBattle)
		closemessage
		fadedefaultbgm
		setvar (VAR_EMERALBODY_RIVAL_BATTLE_STATE, 1)
		setflag (FLAG_TEMP_2)
		fadescreenswapbuffers (FADE_TO_BLACK)
		removeobject (BARON_BATTLE02)
		fadescreenswapbuffers (FADE_FROM_BLACK)
		release
	}
}
